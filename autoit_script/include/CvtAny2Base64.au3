#pragma compile(FileVersion, 1.2.0.0)
#pragma compile(ProductVersion, 3.3.15.3)
#pragma compile(ProductName, File to Base64 String Code Generator)
#pragma compile(LegalCopyright, UEZ 2011-2020)
#pragma compile(Icon, EyeBlink.ico)
#pragma compile(CompanyName, UEZ Software Development)
#pragma compile(inputboxres, false)
#pragma compile(UPX, False)

#AutoIt3Wrapper_Version=b
#AutoIt3Wrapper_UseX64=n
#AutoIt3Wrapper_Run_Au3Stripper=y
#Au3Stripper_Parameters=/so /rm
#AutoIt3Wrapper_Run_After=del /f /q "%scriptdir%\%scriptfile%_stripped.au3"

#include <APIMiscConstants.au3>
#include <ButtonConstants.au3>
#include <Constants.au3>
#include <FontConstants.au3>
#include <GDIPlus.au3>
#include <GUIConstantsEx.au3>
#include <GUIListView.au3>
#include <GUIMenu.au3>
#include <GUIRichEdit.au3>
#include <Misc.au3>
#include <WindowsConstants.au3>
#include <WinAPISys.au3>
#include <WinAPIProc.au3>
#include <WinAPIConstants.au3>

Global $_B64E_CodeBuffer, $_B64E_CodeBufferMemory, $_B64E_Init, $_B64E_EncodeData, $_B64E_EncodeEnd
Func _Base64EncodeInit($LineBreak = 76) ;code by Ward
	If Not IsDllStruct($_B64E_CodeBuffer) Then
		Local $Opcode
		If @AutoItX64 Then
			$Opcode = "0x
		Else
			$Opcode = "0x
		EndIf
		$_B64E_Init = (StringInStr($Opcode, "89C0") + 1) / 2
		$_B64E_EncodeData = (StringInStr($Opcode, "89DB") + 1) / 2
		$_B64E_EncodeEnd = (StringInStr($Opcode, "89C9") + 1) / 2
		$Opcode = Binary($Opcode)

		$_B64E_CodeBufferMemory = _MemVirtualAlloc(0, BinaryLen($Opcode), $MEM_COMMIT, $PAGE_EXECUTE_READWRITE)
		$_B64E_CodeBuffer = DllStructCreate("byte[" & BinaryLen($Opcode) & "]", $_B64E_CodeBufferMemory)
		DllStructSetData($_B64E_CodeBuffer, 1, $Opcode)
		OnAutoItExitRegister("_B64E_Exit")
	EndIf

	Local $State = DllStructCreate("byte[16]")
	DllCallAddress("none", DllStructGetPtr($_B64E_CodeBuffer) + $_B64E_Init, "struct*", $State, "uint", $LineBreak, "int", 0, "int", 0)
	Return $State
EndFunc   ;==>_Base64EncodeInit

Func _Base64EncodeData(ByRef $State, $Data) ;code by Ward
	If Not IsDllStruct($_B64E_CodeBuffer) Or Not IsDllStruct($State) Then Return SetError(1, 0, "")
	$Data = Binary($Data)
	Local $InputLen = BinaryLen($Data)
	Local $Input = DllStructCreate("byte[" & $InputLen & "]")
	DllStructSetData($Input, 1, $Data)
	Local $OutputLen = Ceiling(BinaryLen($Data) * 1.4) + 3
	Local $Output = DllStructCreate("char[" & $OutputLen & "]")
	DllCallAddress("int", DllStructGetPtr($_B64E_CodeBuffer) + $_B64E_EncodeData, "struct*", $Input, "uint", $InputLen, "struct*", $Output, "struct*", $State)
	Return DllStructGetData($Output, 1)
EndFunc   ;==>_Base64EncodeData

Func _Base64EncodeEnd(ByRef $State) ;code by Ward
	If Not IsDllStruct($_B64E_CodeBuffer) Or Not IsDllStruct($State) Then Return SetError(1, 0, "")
	Local $Output = DllStructCreate("char[5]")
	DllCallAddress("int", DllStructGetPtr($_B64E_CodeBuffer) + $_B64E_EncodeEnd, "struct*", $Output, "struct*", $State, "int", 0, "int", 0)
	Return DllStructGetData($Output, 1)
EndFunc   ;==>_Base64EncodeEnd

Func _Base64Encode($Data, $LineBreak = 0) ;code by Ward - modified by UEZ
	Local $State = _Base64EncodeInit($LineBreak)
	Return StringReplace(StringStripCR(_Base64EncodeData($State, $Data) & _Base64EncodeEnd($State)), @LF, "")
EndFunc   ;==>_Base64Encode
